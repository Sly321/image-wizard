[{"C:\\workspace\\git\\image-wizard\\.eslintrc.js":"1","C:\\workspace\\git\\image-wizard\\postcss.config.js":"2","C:\\workspace\\git\\image-wizard\\src\\App.vue":"3","C:\\workspace\\git\\image-wizard\\src\\components\\HelloWorld.vue":"4","C:\\workspace\\git\\image-wizard\\src\\main.ts":"5","C:\\workspace\\git\\image-wizard\\src\\routes.ts":"6","C:\\workspace\\git\\image-wizard\\src\\shims-vue.d.ts":"7","C:\\workspace\\git\\image-wizard\\src\\store.ts":"8","C:\\workspace\\git\\image-wizard\\src\\views\\About.vue":"9","C:\\workspace\\git\\image-wizard\\src\\views\\HomeView.vue":"10","C:\\workspace\\git\\image-wizard\\src\\views\\NotFound.vue":"11","C:\\workspace\\git\\image-wizard\\tailwind.config.js":"12","C:\\workspace\\git\\image-wizard\\vite.config.js":"13"},{"size":758,"mtime":1653660140580},{"size":83,"mtime":1653660140648},{"size":279,"mtime":1653660126449,"results":"14","hashOfConfig":"15"},{"size":6761,"mtime":1653659983692,"results":"16","hashOfConfig":"15"},{"size":759,"mtime":1653653923915,"results":"17","hashOfConfig":"15"},{"size":367,"mtime":1653654677417,"results":"18","hashOfConfig":"15"},{"size":115,"mtime":1653653923930,"results":"19","hashOfConfig":"15"},{"size":85,"mtime":1653653923930,"results":"20","hashOfConfig":"15"},{"size":2966,"mtime":1653653923930,"results":"21","hashOfConfig":"15"},{"size":283,"mtime":1653654655828,"results":"22","hashOfConfig":"15"},{"size":411,"mtime":1653653923930,"results":"23","hashOfConfig":"15"},{"size":416,"mtime":1653660140691},{"size":120,"mtime":1653660140701},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"buoyzq",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\workspace\\git\\image-wizard\\src\\App.vue",[],[],"C:\\workspace\\git\\image-wizard\\src\\components\\HelloWorld.vue",["51","52"],[],"C:\\workspace\\git\\image-wizard\\src\\main.ts",[],[],"C:\\workspace\\git\\image-wizard\\src\\routes.ts",[],[],"C:\\workspace\\git\\image-wizard\\src\\shims-vue.d.ts",[],[],"C:\\workspace\\git\\image-wizard\\src\\store.ts",[],[],"C:\\workspace\\git\\image-wizard\\src\\views\\About.vue",["53"],[],"C:\\workspace\\git\\image-wizard\\src\\views\\HomeView.vue",[],[],"C:\\workspace\\git\\image-wizard\\src\\views\\NotFound.vue",[],[],{"ruleId":"54","severity":2,"message":"55","line":109,"column":43,"nodeType":"56","messageId":"57","endLine":109,"endColumn":45},{"ruleId":"54","severity":2,"message":"55","line":109,"column":47,"nodeType":"56","messageId":"57","endLine":109,"endColumn":49},{"ruleId":"58","severity":2,"message":"59","line":1,"column":1,"nodeType":null,"messageId":"60"},"@typescript-eslint/ban-types","Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead.","TSTypeLiteral","bannedTypeMessage","vue/multi-word-component-names","Component name \"About\" should always be multi-word.","unexpected"]